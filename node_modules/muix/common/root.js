System.register(["tslib", "react", "./icons/index", "./styles/typography", "./primitives/text-view", "./primitives/icon", "./components/button", "./styles/component-x", "./components/button-demo", "muix-primitives", "muix-styles", "muix-components/Button/Button"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var tslib_1, react_1, index_1, typography_1, text_view_1, icon_1, button_1, component_x_1, button_demo_1, muix_primitives_1, muix_styles_1, Button_1, apps, theme, AppRoot, AppItem;
    return {
        setters: [
            function (tslib_1_1) {
                tslib_1 = tslib_1_1;
            },
            function (react_1_1) {
                react_1 = react_1_1;
            },
            function (index_1_1) {
                index_1 = index_1_1;
            },
            function (typography_1_1) {
                typography_1 = typography_1_1;
            },
            function (text_view_1_1) {
                text_view_1 = text_view_1_1;
            },
            function (icon_1_1) {
                icon_1 = icon_1_1;
            },
            function (button_1_1) {
                button_1 = button_1_1;
            },
            function (component_x_1_1) {
                component_x_1 = component_x_1_1;
            },
            function (button_demo_1_1) {
                button_demo_1 = button_demo_1_1;
            },
            function (muix_primitives_1_1) {
                muix_primitives_1 = muix_primitives_1_1;
            },
            function (muix_styles_1_1) {
                muix_styles_1 = muix_styles_1_1;
            },
            function (Button_1_1) {
                Button_1 = Button_1_1;
            }
        ],
        execute: function () {
            apps = [
                { title: 'Typography', app: typography_1.default },
                { title: 'ButtonDemo', app: button_demo_1.default, overridesNew: button_demo_1.overridesNew },
                { title: 'Button', app: button_1.default },
                { title: 'Icons', app: index_1.default },
                { title: 'TextView', app: text_view_1.default },
                { title: 'Icon', app: icon_1.default },
                //{ title: 'Shadows', app: Shadows },
                { title: 'ComponentX', app: component_x_1.default },
            ];
            theme = muix_styles_1.createMuiTheme({
                palette: {
                    type: 'dark',
                }
            });
            AppRoot = /** @class */ (function (_super) {
                tslib_1.__extends(AppRoot, _super);
                function AppRoot() {
                    var _this = _super !== null && _super.apply(this, arguments) || this;
                    _this.state = { appIndex: 0, rtl: false, light: false };
                    return _this;
                }
                AppRoot.prototype.render = function () {
                    var _this = this;
                    var appIndex = this.state.appIndex;
                    var App = apps[appIndex].app;
                    var root = react_1.default.createElement(muix_primitives_1.View, { style: { flex: 1, paddingTop: 24 } },
                        react_1.default.createElement(muix_styles_1.MuiThemeProvider, { theme: theme },
                            react_1.default.createElement(muix_primitives_1.View, { classes: function (theme) { return ({ root: { flexDirection: 'row', flexWrap: 'wrap', backgroundColor: theme.palette.background.appBar, flexShrink: 0 } }); } }, apps.map(function (app, idx) { return react_1.default.createElement(AppItem, { key: idx, idx: idx, active: idx === appIndex, appRoot: _this }); }))),
                        react_1.default.createElement(muix_primitives_1.Typography, { type: 'display2' }, apps[appIndex].title),
                        react_1.default.createElement(App, null));
                    var root2 = react_1.default.createElement(typography_1.default, null);
                    return react_1.default.createElement(muix_styles_1.AppContainer, { key: appIndex, themeOptions: { overridesX: apps[appIndex].overridesNew } }, root);
                };
                return AppRoot;
            }(react_1.default.Component));
            AppItem = /** @class */ (function (_super) {
                tslib_1.__extends(AppItem, _super);
                function AppItem() {
                    return _super !== null && _super.apply(this, arguments) || this;
                }
                AppItem.prototype.render = function () {
                    var _a = this.props, idx = _a.idx, active = _a.active, appRoot = _a.appRoot;
                    return react_1.default.createElement(Button_1.default, { color: 'primary', disabled: active, onClick: function () { return appRoot.setState(function (state) { return (tslib_1.__assign({}, state, { appIndex: idx })); }); } }, apps[idx].title);
                };
                return AppItem;
            }(react_1.default.PureComponent));
            exports_1("default", AppRoot);
        }
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9vdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90ZXN0L2NvbW1vbi9yb290LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQWVNLElBQUksR0FBNEc7Z0JBQ3BILEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxHQUFHLEVBQUUsb0JBQWMsRUFBRTtnQkFDNUMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLEdBQUcsRUFBRSxxQkFBVSxFQUFFLFlBQVksNEJBQUEsRUFBRTtnQkFDdEQsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxnQkFBVSxFQUFFO2dCQUNwQyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLGVBQUssRUFBRTtnQkFDOUIsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLEdBQUcsRUFBRSxtQkFBUSxFQUFFO2dCQUNwQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLGNBQUksRUFBRTtnQkFDNUIscUNBQXFDO2dCQUNyQyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsR0FBRyxFQUFFLHFCQUFVLEVBQUU7YUFDekMsQ0FBQTtZQUVLLEtBQUssR0FBRyw0QkFBYyxDQUFDO2dCQUMzQixPQUFPLEVBQUU7b0JBQ1AsSUFBSSxFQUFFLE1BQU07aUJBQ2I7YUFDRixDQUFDLENBQUE7WUFFRjtnQkFBc0IsbUNBQWU7Z0JBQXJDO29CQUFBLHFFQW1CQztvQkFsQkMsV0FBSyxHQUFHLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQTs7Z0JBa0JuRCxDQUFDO2dCQWpCQyx3QkFBTSxHQUFOO29CQUFBLGlCQWdCQztvQkFmUyxJQUFBLDhCQUFRLENBQWU7b0JBQy9CLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUE7b0JBQzlCLElBQU0sSUFBSSxHQUFHLDhCQUFDLHNCQUFJLElBQUMsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxVQUFVLEVBQUMsRUFBRSxFQUFFO3dCQUNsRCw4QkFBQyw4QkFBZ0IsSUFBQyxLQUFLLEVBQUUsS0FBSzs0QkFDNUIsOEJBQUMsc0JBQUksSUFBQyxPQUFPLEVBQUUsVUFBQSxLQUFLLElBQUksT0FBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsYUFBYSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBdkgsQ0FBdUgsSUFDNUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFDLEdBQUcsRUFBRSxHQUFHLElBQUssT0FBQSw4QkFBQyxPQUFPLElBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEtBQUssUUFBUSxFQUFFLE9BQU8sRUFBRSxLQUFJLEdBQUksRUFBeEUsQ0FBd0UsQ0FBQyxDQUM1RixDQUNVO3dCQUNuQiw4QkFBQyw0QkFBVSxJQUFDLElBQUksRUFBQyxVQUFVLElBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUssQ0FBYzt3QkFDaEUsOEJBQUMsR0FBRyxPQUFHLENBQ0YsQ0FBQTtvQkFDUCxJQUFNLEtBQUssR0FBRyw4QkFBQyxvQkFBYyxPQUFHLENBQUE7b0JBQ2hDLE1BQU0sQ0FBQyw4QkFBQywwQkFBWSxJQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFFLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxZQUFZLEVBQUUsSUFDMUYsSUFBSSxDQUNRLENBQUE7Z0JBQ2pCLENBQUM7Z0JBQ0gsY0FBQztZQUFELENBQUMsQUFuQkQsQ0FBc0IsZUFBSyxDQUFDLFNBQVMsR0FtQnBDO1lBRUQ7Z0JBQXNCLG1DQUF1RTtnQkFBN0Y7O2dCQUtBLENBQUM7Z0JBSkMsd0JBQU0sR0FBTjtvQkFDUSxJQUFBLGVBQXFDLEVBQW5DLFlBQUcsRUFBRSxrQkFBTSxFQUFFLG9CQUFPLENBQWU7b0JBQzNDLE1BQU0sQ0FBQyw4QkFBQyxnQkFBTSxJQUFDLEtBQUssRUFBQyxTQUFTLEVBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsY0FBTSxPQUFBLE9BQU8sQ0FBQyxRQUFRLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxzQkFBTSxLQUFLLElBQUUsUUFBUSxFQUFFLEdBQUcsSUFBRyxFQUE3QixDQUE2QixDQUFDLEVBQXhELENBQXdELElBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBVSxDQUFBO2dCQUN0SixDQUFDO2dCQUNILGNBQUM7WUFBRCxDQUFDLEFBTEQsQ0FBc0IsZUFBSyxDQUFDLGFBQWEsR0FLeEM7aUNBRWMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IEljb25zIGZyb20gJy4vaWNvbnMvaW5kZXgnXG5pbXBvcnQgVHlwb2dyYXBoeVRlc3QgZnJvbSAnLi9zdHlsZXMvdHlwb2dyYXBoeSdcbmltcG9ydCBUZXh0VmlldyBmcm9tICcuL3ByaW1pdGl2ZXMvdGV4dC12aWV3J1xuaW1wb3J0IEljb24gZnJvbSAnLi9wcmltaXRpdmVzL2ljb24nXG5pbXBvcnQgQnV0dG9uVGVzdCBmcm9tICcuL2NvbXBvbmVudHMvYnV0dG9uJ1xuaW1wb3J0IFNoYWRvd3MgZnJvbSAnLi9zaGFkb3dzL2luZGV4J1xuaW1wb3J0IENvbXBvbmVudFggZnJvbSAnLi9zdHlsZXMvY29tcG9uZW50LXgnXG5pbXBvcnQgQnV0dG9uRGVtbywgeyBvdmVycmlkZXNOZXcgfSBmcm9tICcuL2NvbXBvbmVudHMvYnV0dG9uLWRlbW8nXG5cbmltcG9ydCB7IFNjcm9sbFZpZXcsIFZpZXcsIFRleHQsIFR5cG9ncmFwaHkgfSBmcm9tICdtdWl4LXByaW1pdGl2ZXMnXG5pbXBvcnQgeyBBcHBDb250YWluZXIsIE11aVRoZW1lUHJvdmlkZXIsIGNyZWF0ZU11aVRoZW1lIH0gZnJvbSAnbXVpeC1zdHlsZXMnXG5pbXBvcnQgQnV0dG9uIGZyb20gJ211aXgtY29tcG9uZW50cy9CdXR0b24vQnV0dG9uJ1xuXG5jb25zdCBhcHBzOiB7IHRpdGxlOiBzdHJpbmc7IGFwcDogUmVhY3QuQ29tcG9uZW50VHlwZSwgb3ZlcnJpZGVzTmV3PzogTXVpeC5UaGVtZVZhbHVlT3JDcmVhdG9yPE11aXguT3ZlcnJpZGVzWD4gfVtdID0gW1xuICB7IHRpdGxlOiAnVHlwb2dyYXBoeScsIGFwcDogVHlwb2dyYXBoeVRlc3QgfSxcbiAgeyB0aXRsZTogJ0J1dHRvbkRlbW8nLCBhcHA6IEJ1dHRvbkRlbW8sIG92ZXJyaWRlc05ldyB9LFxuICB7IHRpdGxlOiAnQnV0dG9uJywgYXBwOiBCdXR0b25UZXN0IH0sXG4gIHsgdGl0bGU6ICdJY29ucycsIGFwcDogSWNvbnMgfSxcbiAgeyB0aXRsZTogJ1RleHRWaWV3JywgYXBwOiBUZXh0VmlldyB9LFxuICB7IHRpdGxlOiAnSWNvbicsIGFwcDogSWNvbiB9LFxuICAvL3sgdGl0bGU6ICdTaGFkb3dzJywgYXBwOiBTaGFkb3dzIH0sXG4gIHsgdGl0bGU6ICdDb21wb25lbnRYJywgYXBwOiBDb21wb25lbnRYIH0sXG5dXG5cbmNvbnN0IHRoZW1lID0gY3JlYXRlTXVpVGhlbWUoe1xuICBwYWxldHRlOiB7XG4gICAgdHlwZTogJ2RhcmsnLCAvLyBTd2l0Y2hpbmcgdGhlIGRhcmsgbW9kZSBvbiBpcyBhIHNpbmdsZSBwcm9wZXJ0eSB2YWx1ZSBjaGFuZ2UuXG4gIH1cbn0pXG5cbmNsYXNzIEFwcFJvb3QgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzdGF0ZSA9IHsgYXBwSW5kZXg6IDAsIHJ0bDogZmFsc2UsIGxpZ2h0OiBmYWxzZSB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGFwcEluZGV4IH0gPSB0aGlzLnN0YXRlXG4gICAgY29uc3QgQXBwID0gYXBwc1thcHBJbmRleF0uYXBwXG4gICAgY29uc3Qgcm9vdCA9IDxWaWV3IHN0eWxlPXt7IGZsZXg6IDEsIHBhZGRpbmdUb3A6MjQgfX0+XG4gICAgICA8TXVpVGhlbWVQcm92aWRlciB0aGVtZT17dGhlbWV9PlxuICAgICAgICA8VmlldyBjbGFzc2VzPXt0aGVtZSA9PiAoeyByb290OiB7IGZsZXhEaXJlY3Rpb246ICdyb3cnLCBmbGV4V3JhcDogJ3dyYXAnLCBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuYmFja2dyb3VuZC5hcHBCYXIsIGZsZXhTaHJpbms6IDAgfSB9KX0+XG4gICAgICAgICAge2FwcHMubWFwKChhcHAsIGlkeCkgPT4gPEFwcEl0ZW0ga2V5PXtpZHh9IGlkeD17aWR4fSBhY3RpdmU9e2lkeCA9PT0gYXBwSW5kZXh9IGFwcFJvb3Q9e3RoaXN9IC8+KX1cbiAgICAgICAgPC9WaWV3PlxuICAgICAgPC9NdWlUaGVtZVByb3ZpZGVyPlxuICAgICAgPFR5cG9ncmFwaHkgdHlwZT0nZGlzcGxheTInID57YXBwc1thcHBJbmRleF0udGl0bGV9PC9UeXBvZ3JhcGh5PlxuICAgICAgPEFwcCAvPlxuICAgIDwvVmlldz5cbiAgICBjb25zdCByb290MiA9IDxUeXBvZ3JhcGh5VGVzdCAvPlxuICAgIHJldHVybiA8QXBwQ29udGFpbmVyIGtleT17YXBwSW5kZXh9IHRoZW1lT3B0aW9ucz17eyBvdmVycmlkZXNYOiBhcHBzW2FwcEluZGV4XS5vdmVycmlkZXNOZXcgfX0+XG4gICAgICB7cm9vdH1cbiAgICA8L0FwcENvbnRhaW5lcj5cbiAgfVxufVxuXG5jbGFzcyBBcHBJdGVtIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDx7IGlkeDogbnVtYmVyOyBhY3RpdmU6IGJvb2xlYW47IGFwcFJvb3Q6IEFwcFJvb3QgfT4ge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBpZHgsIGFjdGl2ZSwgYXBwUm9vdCB9ID0gdGhpcy5wcm9wc1xuICAgIHJldHVybiA8QnV0dG9uIGNvbG9yPSdwcmltYXJ5JyBkaXNhYmxlZD17YWN0aXZlfSBvbkNsaWNrPXsoKSA9PiBhcHBSb290LnNldFN0YXRlKHN0YXRlID0+ICh7IC4uLnN0YXRlLCBhcHBJbmRleDogaWR4IH0pKX0+e2FwcHNbaWR4XS50aXRsZX08L0J1dHRvbj5cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcHBSb290XG4iXX0=