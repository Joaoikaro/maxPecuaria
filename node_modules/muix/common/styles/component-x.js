System.register(["tslib", "react", "muix-styles", "muix-primitives"], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var tslib_1, react_1, muix_styles_1, muix_primitives_1, sheet, testStyles, TestStyles, App;
    return {
        setters: [
            function (tslib_1_1) {
                tslib_1 = tslib_1_1;
            },
            function (react_1_1) {
                react_1 = react_1_1;
            },
            function (muix_styles_1_1) {
                muix_styles_1 = muix_styles_1_1;
            },
            function (muix_primitives_1_1) {
                muix_primitives_1 = muix_primitives_1_1;
            }
        ],
        execute: function () {
            sheet = muix_styles_1.sheetCreator(function (_a) {
                var palette = _a.palette, typoX = _a.typographyX;
                return ({
                    root: {
                        minWidth: 150, margin: 10, padding: 10,
                        justifyContent: 'center', alignItems: 'center',
                        backgroundColor: palette.grey.A200,
                        $childOverrides: {
                            TestStyles: {
                                primary: {
                                    backgroundColor: 'green',
                                    $overrides: {
                                        //the same as "label: {color: 'maroon'}"
                                        label: {
                                            $web: {
                                                color: 'maroon'
                                            },
                                            $native: {
                                                color: 'maroon'
                                            }
                                        }
                                    }
                                },
                                secondary: {
                                    backgroundColor: 'black',
                                    $overrides: {
                                        label: { color: 'pink' }
                                    }
                                },
                            }
                        }
                    },
                    style: {},
                    primary: {
                        backgroundColor: palette.primary[500],
                        $overrides: {
                            label: { color: 'yellow' }
                        }
                    },
                    secondary: {
                        backgroundColor: palette.secondary[500],
                        $overrides: {
                            label: { color: 'lightgray' }
                        }
                    },
                    label: {
                        color: palette.common.white
                    },
                });
            });
            testStyles = function (props) {
                var classes = props.classes, getStyleWithSideEffect = props.getStyleWithSideEffect, theme = props.theme, flip = props.flip, innerRef = props.innerRef, primary = props.primary, children = props.children, style = props.style, rest = tslib_1.__rest(props, ["classes", "getStyleWithSideEffect", "theme", "flip", "innerRef", "primary", "children", "style"]);
                var rootStyles = getStyleWithSideEffect(// getStyleWithSideEffect now knowns, which rulesets are actualy used. So it can use their $overrides and $childOverrides props
                classes.root, primary === true && classes.primary, primary === false && classes.secondary, classes.style);
                var labelStyles = getStyleWithSideEffect(classes.label);
                var ch = react_1.default.Children.toArray(children);
                return react_1.default.createElement(muix_primitives_1.ViewX, { className: rootStyles, style: style }, ch.length == 1 && typeof ch[0] === 'string' ? react_1.default.createElement(muix_primitives_1.TextX, { className: labelStyles }, children) : children);
            };
            //{ch.length == 1 && typeof ch[0] === 'string' ? <TextX className={labelStyles}>{children}</TextX> : children}
            TestStyles = muix_styles_1.withStyles(sheet, { name: 'TestStyles' })(testStyles);
            App = function (props) { return react_1.default.createElement(muix_styles_1.AppContainer, null,
                react_1.default.createElement(muix_primitives_1.ScrollView, { classes: { contentContainerStyle: { backgroundColor: 'yellow' } } },
                    react_1.default.createElement(TestStyles, { primary: true }, "BLUE/YELLOW"),
                    react_1.default.createElement(TestStyles, { primary: false }, "RED/LIGHTGRAY"),
                    react_1.default.createElement(TestStyles, null, "GRAY"),
                    react_1.default.createElement(TestStyles, { classes: function (theme) { return ({ root: { backgroundColor: theme.palette.grey.A100 } }); } },
                        react_1.default.createElement(TestStyles, { primary: true }, "GREEN/MAROON"),
                        react_1.default.createElement(TestStyles, { primary: false }, "BLACK/PINK"),
                        react_1.default.createElement(TestStyles, { primary: true, classes: function (theme) { return ({ label: { color: 'orange' } }); } }, "GREEN/ORANGE")))); };
            exports_1("default", App);
        }
    };
});
//# sourceMappingURL=data:application/json;base64,